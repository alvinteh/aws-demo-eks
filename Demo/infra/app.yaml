############################################################
# App Mesh
############################################################
apiVersion: appmesh.k8s.aws/v1beta2
kind: Mesh
metadata:
  name: ab3test-mesh
spec:
  namespaceSelector:
    matchLabels:
      mesh: ab3test-mesh
  egressFilter:
    type: ALLOW_ALL

############################################################
# App Mesh Virtual Nodes
############################################################
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: vn-jukebox-v1
  namespace: ab3test
spec:
  podSelector:
    matchLabels:
      app: ab3test
      service: jukebox
      version: 0.1.0
  listeners:
    - portMapping:
        port: 80
        protocol: http
  backends:
    - virtualService:
        virtualServiceRef:
          name: vs-rap
    - virtualService:
        virtualServiceRef:
          name: vs-rock
  serviceDiscovery:
    dns:
      hostname: service-jukebox-v1.ab3test.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: vn-rap-v1
  namespace: ab3test
spec:
  podSelector:
    matchLabels:
      app: ab3test
      service: rap
      version: 0.1.0
  listeners:
    - portMapping:
        port: 3000
        protocol: http
  serviceDiscovery:
    dns:
      hostname: service-rap-v1.ab3test.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: vn-rock-v1
  namespace: ab3test
spec:
  podSelector:
    matchLabels:
      app: ab3test
      service: rock
      version: 0.1.0
  listeners:
    - portMapping:
        port: 3000
        protocol: http
  serviceDiscovery:
    dns:
      hostname: service-rock-v1.ab3test.svc.cluster.local


############################################################
# App Mesh Virtual Services
############################################################
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualService
metadata:
  name: vs-rap
  namespace: ab3test
spec:
  awsName: service-rap.ab3test.svc.cluster.local
  provider:
    virtualNode:
      virtualNodeRef:
        name: vn-rap-v1
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualService
metadata:
  name: vs-rock
  namespace: ab3test
spec:
  awsName: service-rock.ab3test.svc.cluster.local
  provider:
    virtualRouter:
      virtualRouterRef:
        name: vr-rock


############################################################
# App Mesh Virtual Routers
############################################################
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualRouter
metadata:
  name: vr-rock
  namespace: ab3test
spec:
  listeners:
    - portMapping:
        port: 3000
        protocol: http
  routes:
    - name: rock-route
      httpRoute:
        match:
          prefix: /
        action:
          weightedTargets:
            - virtualNodeRef:
                name: vn-rock-v1
              weight: 100


############################################################
# Deployments
############################################################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-jukebox-v1
  namespace: ab3test
  labels:
    app: ab3test
    service: jukebox
    version: 0.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ab3test
      service: jukebox
      version: 0.1.0
  template:
    metadata:
      labels:
        app: ab3test
        service: jukebox
        version: 0.1.0
    spec:
      serviceAccountName: general-service-account
      containers:
      - name: app
        image: 238435206887.dkr.ecr.ap-southeast-1.amazonaws.com/jukebox:0.1.0
        ports:
        - containerPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-rap-v1
  namespace: ab3test
  labels:
    app: ab3test
    service: rap
    version: 0.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ab3test
      service: rap
      version: 0.1.0
  template:
    metadata:
      labels:
        app: ab3test
        service: rap
        version: 0.1.0
    spec:
      serviceAccountName: general-service-account
      containers:
      - name: app
        image: 238435206887.dkr.ecr.ap-southeast-1.amazonaws.com/rap:0.1.0
        ports:
        - containerPort: 3000
      
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-rock-v1
  namespace: ab3test
  labels:
    app: ab3test
    service: rock
    version: 0.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ab3test
      service: rock
      version: 0.1.0
  template:
    metadata:
      labels:
        app: ab3test
        service: rock
        version: 0.1.0
    spec:
      serviceAccountName: general-service-account
      containers:
      - name: app
        image: 238435206887.dkr.ecr.ap-southeast-1.amazonaws.com/rock:0.1.0
        ports:
        - containerPort: 3000
     

############################################################
# Services
############################################################
---
apiVersion: v1
kind: Service
metadata:
  name: service-jukebox-v1
  namespace: ab3test
  labels:
    app: ab3test
    service: jukebox
    version: 0.1.0
spec:
  type: NodePort
  selector:
    app: ab3test
    service: jukebox
    version: 0.1.0
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: service-rap
  namespace: ab3test
  labels:
    app: ab3test
    service: rap
spec:
  ports:
  - port: 3000
    name: http
---
apiVersion: v1
kind: Service
metadata:
  name: service-rock
  namespace: ab3test
  labels:
    app: ab3test
    service: rock
spec:
  ports:
  - port: 3000
    name: http
---
apiVersion: v1
kind: Service
metadata:
  name: service-rap-v1
  namespace: ab3test
  labels:
    app: ab3test
    service: rap
    version: 0.1.0
spec:
  type: NodePort
  selector:
    app: ab3test
    service: rap
    version: 0.1.0
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: service-rock-v1
  namespace: ab3test
  labels:
    app: ab3test
    service: rock
    version: 0.1.0
spec:
  type: NodePort
  selector:
    app: ab3test
    service: rock
    version: 0.1.0
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
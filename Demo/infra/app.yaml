############################################################
# Namespaces
############################################################
apiVersion: v1
kind: Namespace
metadata:
  name: ab3test
  labels:
    app: ab3test
    appmesh.k8s.aws/sidecarInjectorWebhook: enabled
    mesh: ab3test-mesh
---
kind: Namespace
apiVersion: v1
metadata:
  name: aws-observability
  labels:
    aws-observability: enabled


############################################################
# Logging
############################################################
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: aws-logging
  namespace: aws-observability
data:
  output.conf: |
    [OUTPUT]
        Name cloudwatch_logs
        Match   *
        region ap-southeast-1
        log_group_name ab3test
        log_stream_prefix ab3test-
        auto_create_group On


############################################################
# App Mesh
############################################################
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: Mesh
metadata:
  name: ab3test-mesh
spec:
  namespaceSelector:
    matchLabels:
      mesh: ab3test-mesh
  egressFilter:
    type: ALLOW_ALL

############################################################
# App Mesh Virtual Nodes
############################################################
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: ab3test-vn-jukebox-v1
  namespace: ab3test
spec:
  podSelector:
    matchLabels:
      app: ab3test
      service: jukebox
      version: 0.1.0
  listeners:
    - portMapping:
        port: 80
        protocol: http
  backends:
    - virtualService:
        virtualServiceRef:
          name: ab3test-vs-rap
    - virtualService:
        virtualServiceRef:
          name: ab3test-vs-rock
  serviceDiscovery:
    dns:
      hostname: ab3test-service-jukebox-v1.ab3test.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: ab3test-vn-rap-v1
  namespace: ab3test
spec:
  podSelector:
    matchLabels:
      app: ab3test
      service: rap
      version: 0.1.0
  listeners:
    - portMapping:
        port: 3000
        protocol: http
  backends:
  - virtualService:
      virtualServiceRef:
        name: ab3test-vs-jukebox
  serviceDiscovery:
    dns:
      hostname: ab3test-service-rap-v1.ab3test.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: ab3test-vn-rock-v1
  namespace: ab3test
spec:
  podSelector:
    matchLabels:
      app: ab3test
      service: rock
      version: 0.1.0
  listeners:
    - portMapping:
        port: 3000
        protocol: http
  backends:
  - virtualService:
      virtualServiceRef:
        name: ab3test-vs-jukebox
  serviceDiscovery:
    dns:
      hostname: ab3test-service-rock-v1.ab3test.svc.cluster.local


############################################################
# App Mesh Virtual Services
############################################################
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualService
metadata:
  name: ab3test-vs-jukebox
  namespace: ab3test
spec:
  awsName: ab3test-service-jukebox-v1.ab3test.svc.cluster.local
  provider:
    virtualNode:
      virtualNodeRef:
        name: ab3test-vn-jukebox-v1
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualService
metadata:
  name: ab3test-vs-rap
  namespace: ab3test
spec:
  awsName: ab3test-service-rap-v1.ab3test.svc.cluster.local
  provider:
    virtualNode:
      virtualNodeRef:
        name: ab3test-vn-rap-v1
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualService
metadata:
  name: ab3test-vs-rock
  namespace: ab3test
spec:
  awsName: ab3test-service-rock-v1.ab3test.svc.cluster.local
  provider:
    virtualRouter:
      virtualRouterRef:
        name: ab3test-vr-rock


############################################################
# App Mesh Virtual Routers
############################################################
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualRouter
metadata:
  name: ab3test-vr-rock
  namespace: ab3test
spec:
  listeners:
    - portMapping:
        port: 3000
        protocol: http
  routes:
    - name: rock-v1-route
      httpRoute:
        match:
          prefix: /
        action:
          weightedTargets:
            - virtualNodeRef:
                name: ab3test-vn-rock-v1
              weight: 100


############################################################
# Deployments
############################################################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ab3test-deployment-jukebox-v1
  namespace: ab3test
  labels:
    app: ab3test
    service: jukebox
    version: 0.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ab3test
      service: jukebox
      version: 0.1.0
  template:
    metadata:
      labels:
        app: ab3test
        service: jukebox
        version: 0.1.0
    spec:
      serviceAccountName: general-service-account
      containers:
      - name: app
        image: 238435206887.dkr.ecr.ap-southeast-1.amazonaws.com/jukebox:0.1.3000
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: 200m
            memory: 0.5Gi
          limits:
            cpu: 400m
            memory: 1Gi
     
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ab3test-deployment-rap-v1
  namespace: ab3test
  labels:
    app: ab3test
    service: rap
    version: 0.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ab3test
      service: rap
      version: 0.1.0
  template:
    metadata:
      labels:
        app: ab3test
        service: rap
        version: 0.1.0
    spec:
      serviceAccountName: general-service-account
      containers:
      - name: app
        image: 238435206887.dkr.ecr.ap-southeast-1.amazonaws.com/rap:0.1.0
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: 200m
            memory: 0.5Gi
          limits:
            cpu: 400m
            memory: 1Gi
      
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ab3test-deployment-rock-v1
  namespace: ab3test
  labels:
    app: ab3test
    service: rock
    version: 0.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ab3test
      service: rock
      version: 0.1.0
  template:
    metadata:
      labels:
        app: ab3test
        service: rock
        version: 0.1.0
    spec:
      serviceAccountName: general-service-account
      containers:
      - name: app
        image: 238435206887.dkr.ecr.ap-southeast-1.amazonaws.com/rock:0.1.0
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: 200m
            memory: 0.5Gi
          limits:
            cpu: 400m
            memory: 1Gi
     

############################################################
# Services
############################################################
---
apiVersion: v1
kind: Service
metadata:
  name: ab3test-service-jukebox-v1
  namespace: ab3test
  labels:
    app: ab3test
    service: jukebox
    version: 0.1.0
spec:
  type: NodePort
  selector:
    app: ab3test
    service: jukebox
    version: 0.1.0
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: ab3test-service-rap-v1
  namespace: ab3test
  labels:
    app: ab3test
    service: rap
    version: 0.1.0
spec:
  type: NodePort
  selector:
    app: ab3test
    service: rap
    version: 0.1.0
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: ab3test-service-rock-v1
  namespace: ab3test
  labels:
    app: ab3test
    service: rock
    version: 0.1.0
spec:
  type: NodePort
  selector:
    app: ab3test
    service: rock
    version: 0.1.0
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000


############################################################
# Ingress
############################################################
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: ab3test
  name: ab3test-ingress
  annotations:
    alb.ingress.kubernetes.io/group.name: ab3test
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
spec:
  rules:
    - http:
        paths:
          - path: /*
            backend:
              serviceName: ab3test-service-jukebox-v1
              servicePort: 80
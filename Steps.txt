1. Create EKS cluster
eksctl create cluster -f kubernetes/cluster.yaml

2. Export environment variables and set namespace for current context

# Update VPC ID in next command
export CLUSTER=ab3test
export NAMESPACE=ab3test
export AWS_REGION=ap-southeast-1
export VPC_ID=

kubectl config set-context --current --namespace=ab3test

3. Add EKS Helm charts

helm repo add eks https://aws.github.io/eks-charts

4. Setup AWS load balancer controller
curl -o iam-policies/aws-load-balancer-controller-policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/install/iam_policy.json

aws iam create-policy \
    --policy-name AWSLoadBalancerControllerIAMPolicy \
    --policy-document file://iam-policies/aws-load-balancer-controller-policy.json


kubectl apply -k "https://github.com/aws/eks-charts/stable/aws-load-balancer-controller//crds?ref=master"

# Update AWS account ID in next command
eksctl create iamserviceaccount \
  --cluster=$CLUSTER \
  --namespace=kube-system \
  --name=aws-load-balancer-controller \
  --attach-policy-arn=arn:aws:iam::238435206887:policy/AWSLoadBalancerControllerIAMPolicy \
  --override-existing-serviceaccounts \
  --approve

helm upgrade -i aws-load-balancer-controller eks/aws-load-balancer-controller \
  --set clusterName=$CLUSTER \
  --set serviceAccount.create=false \
  --set serviceAccount.name=aws-load-balancer-controller \
  --set region=ap-southeast-1 \
  --set vpcId=$VPC_ID \
  -n kube-system

kubectl get deployment -n kube-system aws-load-balancer-controller

5. Setup IAM role for application logging to CloudWatch

eksctl create iamserviceaccount \
--name logging-service-account \
--namespace=$NAMESPACE \
--cluster $CLUSTER \
--attach-policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy  \
--approve

6. Setup AWS App Mesh
kubectl apply -k "https://github.com/aws/eks-charts/stable/appmesh-controller/crds?ref=master"

kubectl create ns appmesh-system

eksctl create iamserviceaccount \
    --cluster $CLUSTER \
    --namespace appmesh-system \
    --name appmesh-controller \
    --attach-policy-arn  arn:aws:iam::aws:policy/AWSCloudMapFullAccess,arn:aws:iam::aws:policy/AWSAppMeshFullAccess \
    --override-existing-serviceaccounts \
    --approve

helm upgrade -i appmesh-controller eks/appmesh-controller \
    --namespace appmesh-system \
    --set region=$AWS_REGION \
    --set serviceAccount.create=false \
    --set serviceAccount.name=appmesh-controller

kubectl get deployment appmesh-controller -n appmesh-system -o json  | jq -r ".spec.template.spec.containers[].image" | cut -f2 -d ':'

eksctl create iamserviceaccount \
    --cluster $CLUSTER \
    --namespace $NAMESPACE \
    --name appmesh-service-account \
    --attach-policy-arn arn:aws:iam::aws:policy/AWSAppMeshFullAccess \
    --override-existing-serviceaccounts \
    --approve

7. Apply deployment, service and ingress

kubectl apply -f app.yaml

X. Misc useful snippets for debugging

kubectl run -i --tty curl --image=curlimages/curl --restart=Never -- sh
kubectl exec --stdin --tty curl -- sh

kubectl get events --sort-by='.lastTimestamp'